% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mhEdge.R
\name{mhEdge}
\alias{mhEdge}
\title{mhEdge}
\usage{
mhEdge(adjMatrix, data, iterations, mutationRate, nGV, pmr = FALSE,
  prior = c(0.05, 0.05, 0.9), scoreFun)
}
\arguments{
\item{adjMatrix}{The adjacency matrix returned by the MRPC algorithm. The
adjacency matrix is a matrix of zeros and ones. The ones represent an edge
and also indicates the direction of that edge.}

\item{data}{A matrix with the nodes across the columns and the observations
down the rows.}

\item{iterations}{An integer for the number of iterations to run the MH
algorithm.}

\item{mutationRate}{A number between 0 and 1. As a rule of thumb the mutation
rate should be 1 / (number of edges in the graph).}

\item{nGV}{The number of genetic variants in the graph.}

\item{pmr}{Logical. If true the Metropolis-Hastings algorithm will use the
Principle of Mendelian Randomization, PMR. This prevents the direction of an
edge pointing from a gene expression node to a genetic variant node.}

\item{prior}{A vector containing the prior probability of seeing each edge
direction.}

\item{scoreFun}{A character string indicating what method to use for
calculating the fitness.}
}
\value{
A matrix where the first m columns are the edge directions and the
m + 1 column is the log likelihood. Each row represents one graph.
}
\description{
The main function for the Metropolis-Hastings algorithm. It returns the
posterior distribution of the edge directions.
}
\examples{
# Generate data under topology M1.
data_m1 <- m1gv(N = 200, p = 0.27, ss = 1)

# Use the true edges as the inferred edges.
adjmatrix_m1 <- matrix(c(0, 1, 0,
                         0, 0, 1,
                         0, 0, 0),
                       byrow = TRUE,
                       nrow = 3)

# Run the Metropolis-Hastings algorithm with the Principle of Mendelian
# Randomization (PMR).
mh_m1_pmr <- mhEdge(adjMatrix = adjmatrix_m1,
                    data = data_m1,
                    iterations = 500,
                    mutationRate = 1/2,
                    nGV = 1,
                    pmr = TRUE,
                    prior = c(0.05, 0.05, 0.9),
                    scoreFun = 'logLikelihood')

# Run the Metropolis-Hastings algorithm on the same data as the previous
# example but with pmr set to FALSE.
mh_m1 <- mhEdge(adjMatrix = adjmatrix_m1,
                data = data_m1,
                iterations = 500,
                mutationRate = 1/2,
                nGV = 1,
                pmr = FALSE,
                prior = c(0.05, 0.05, 0.9),
                scoreFun = 'logLikelihood')

}
